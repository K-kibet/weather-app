{"ast":null,"code":"var _jsxFileName = \"/home/charleykibet254/weather-app/src/components/Day.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Cloudy from '../assets/cloudy.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DayCard = styled.div`\n  height: calc(100% - 20px);\n  height: 8vw;\n  max-height: 160px;\n  min-height: 140px;\n  min-width: 180px;\n  position: relative;\n  transition: transform 250ms;\n  width: calc(100% / 7);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  margin: 10px 10px;\n  border-radius: 10px;\n  padding: 10px;\n\n  backdrop-filter: blur(3px);\n  background-color: rgba(255,255,255, 0.4);\n  border: 1px solid rgba(255,255,255, 0.2);\n  border-radius: 10px;\n  box-shadow: 2px 2px 4px rgba(0, 0,0, 0.25);\n  &:last-of-type {\n    margin-right: 5px;\n  }\n`;\n_c = DayCard;\nconst Icon = styled.img`\n  width: 60px;\n  object-fit: fill;\n  object-position: center;\n\n  font-size: 3.5em;\n  text-shadow: 2px 2px 2px rgba(black, 0.1);\n`;\n_c2 = Icon;\nconst Temperature = styled.div`\n  align-items: flex-start;\n  display: flex;\n  font-size: 0.9em;\n  justify-content: center;\n  color:#46aab3;\n`;\n_c3 = Temperature;\nconst DayName = styled.div`\n  font-size: 0.9em;\n  text-transform: uppercase;\n  color:#46aab3;\n`;\n_c4 = DayName;\nconst Unit = styled.span`\n    font-size: 0.8em;\n    margin-left: 3px;\n  `;\n_c5 = Unit;\nexport default function Day() {\n  _s();\n\n  const [responseData, setResponseData] = useState([]);\n  let currentDate = new Date();\n  let tomorrow;\n  let days = [];\n  let result;\n\n  const getDates = () => {\n    for (let i = 0; i <= 3; i++) {\n      tomorrow = currentDate.setDate(currentDate.getDate() + 1);\n      result = new Date(tomorrow).toISOString().replace(/T.*/, '').split('-').reverse().join('-');\n      days.push(result);\n      currentDate = new Date(tomorrow);\n    }\n  };\n\n  getDates();\n  let status;\n\n  const setStatus = () => {\n    if (document.readyState === 'interactive') {\n      status = 'interactive';\n    } else return;\n  };\n\n  setStatus();\n  useEffect(() => {\n    (function () {\n      const allowedState = [{}];\n\n      for (let i = 0; i <= days.length; i++) {\n        axios.get(`https://api.weatherapi.com/v1/future.json?key=730a9b93e6c64a57bb9145731222206&q=London&dt=${days[i]}2022-07-11`).then(function (response) {\n          allowedState.push(response.data);\n        }).catch(function (error) {\n          console.error(error);\n        });\n        setResponseData(allowedState);\n      }\n\n      console.log(responseData);\n    })();\n  }, [status]);\n  return /*#__PURE__*/_jsxDEV(DayCard, {\n    children: [/*#__PURE__*/_jsxDEV(DayName, {\n      children: \"MON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Icon, {\n      src: Cloudy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Temperature, {\n      children: [\"20 \", /*#__PURE__*/_jsxDEV(Unit, {\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Day, \"+tGXyDe9VX4DC140iqUIW2NNhmg=\");\n\n_c6 = Day;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"DayCard\");\n$RefreshReg$(_c2, \"Icon\");\n$RefreshReg$(_c3, \"Temperature\");\n$RefreshReg$(_c4, \"DayName\");\n$RefreshReg$(_c5, \"Unit\");\n$RefreshReg$(_c6, \"Day\");","map":{"version":3,"names":["axios","React","useEffect","useState","styled","Cloudy","DayCard","div","Icon","img","Temperature","DayName","Unit","span","Day","responseData","setResponseData","currentDate","Date","tomorrow","days","result","getDates","i","setDate","getDate","toISOString","replace","split","reverse","join","push","status","setStatus","document","readyState","allowedState","length","get","then","response","data","catch","error","console","log"],"sources":["/home/charleykibet254/weather-app/src/components/Day.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Cloudy from '../assets/cloudy.png';\n\n\nconst DayCard = styled.div`\n  height: calc(100% - 20px);\n  height: 8vw;\n  max-height: 160px;\n  min-height: 140px;\n  min-width: 180px;\n  position: relative;\n  transition: transform 250ms;\n  width: calc(100% / 7);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  margin: 10px 10px;\n  border-radius: 10px;\n  padding: 10px;\n\n  backdrop-filter: blur(3px);\n  background-color: rgba(255,255,255, 0.4);\n  border: 1px solid rgba(255,255,255, 0.2);\n  border-radius: 10px;\n  box-shadow: 2px 2px 4px rgba(0, 0,0, 0.25);\n  &:last-of-type {\n    margin-right: 5px;\n  }\n`\n\nconst Icon = styled.img`\n  width: 60px;\n  object-fit: fill;\n  object-position: center;\n\n  font-size: 3.5em;\n  text-shadow: 2px 2px 2px rgba(black, 0.1);\n`\nconst Temperature = styled.div`\n  align-items: flex-start;\n  display: flex;\n  font-size: 0.9em;\n  justify-content: center;\n  color:#46aab3;\n`\n\nconst DayName = styled.div`\n  font-size: 0.9em;\n  text-transform: uppercase;\n  color:#46aab3;\n`\n\n\n  const Unit = styled.span`\n    font-size: 0.8em;\n    margin-left: 3px;\n  `\n\nexport default function Day() {\n      \n  const [responseData, setResponseData] = useState([]);\n  \n\n  let currentDate = new Date()\n  let tomorrow;\n  let days = [];\n  let result;\n\n  const getDates = () => {\n    for(let i = 0; i<=3; i++){\n      tomorrow = currentDate.setDate(currentDate.getDate() + 1)\n      result = new Date(tomorrow).toISOString().replace(/T.*/,'').split('-').reverse().join('-');\n      days.push(result);\n      currentDate = new Date(tomorrow);\n    }\n  }\n  \n  getDates()\n\n  let status;\n  const setStatus = () => {\n     if(document.readyState === 'interactive'){\n      status = 'interactive'\n      \n    } else return;\n  }\n  setStatus();\n  useEffect(() => {\n    ( function () {\n      const allowedState = [{}]\n\n      for(let i = 0; i<=days.length; i++){\n        axios.get(`https://api.weatherapi.com/v1/future.json?key=730a9b93e6c64a57bb9145731222206&q=London&dt=${days[i]}2022-07-11`).then(function (response) {\n        allowedState.push(response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n      setResponseData(allowedState)\n      }\n\n      console.log(responseData)\n    })()\n  }, [status])\n  return (\n    <DayCard>\n        <DayName>MON</DayName>\n        <Icon src={Cloudy}/>\n        <Temperature>20 <Unit>C</Unit></Temperature>\n    </DayCard>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}